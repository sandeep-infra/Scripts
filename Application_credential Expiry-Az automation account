# === Config ===
$DaysUntilExpiration = 15
$IncludeAlreadyExpired = "No"
 
# === Connect to Graph ===
Connect-MgGraph -Identity -NoWelcome
Write-Host "Fetching applications with secrets..." -ForegroundColor Cyan
 
# === Fetch apps + credentials ===
$apps = Get-MgApplication -All -Property "id,appId,displayName,passwordCredentials"
$thresholdDate = (Get-Date).AddDays($DaysUntilExpiration).Date
$reportData = [System.Collections.Generic.List[PSObject]]::new()
 
foreach ($app in $apps) {
    $expiringSecrets = $app.PasswordCredentials | Where-Object {
        $end = [datetime]$_.EndDateTime
        $days = ($end - (Get-Date)).Days
        ($IncludeAlreadyExpired -eq "Yes" -and $days -le $DaysUntilExpiration) -or
        ($days -le $DaysUntilExpiration -and $days -ge 0)
    }
 
    if ($expiringSecrets.Count -gt 0) {
        try {
            $owners = Get-MgApplicationOwner -ApplicationId $app.Id -All
        } catch {
            Write-Host "⚠️ Failed to get owners for $($app.DisplayName)" -ForegroundColor Red
            continue
        }
 
        $ownerEmails = @()
        foreach ($owner in $owners) {
            if ($owner.AdditionalProperties['@odata.type'] -eq '#microsoft.graph.user') {
                try {
                    $user = Get-MgUser -UserId $owner.Id
                    if ($user.Mail) { $ownerEmails += $user.Mail }
                } catch {}
            }
        }
 
        foreach ($secret in $expiringSecrets) {
            $entry = [PSCustomObject]@{
                ApplicationName = $app.DisplayName
                ApplicationID   = $app.AppId
                SecretName      = $secret.DisplayName
                SecretStartDate = $secret.StartDateTime
                SecretEndDate   = $secret.EndDateTime
                OwnerEmails     = $ownerEmails -join ';'
                DaysUntilExpiry = ($secret.EndDateTime - (Get-Date)).Days
            }
 
            $reportData.Add($entry)
            Write-Output "`n==== Expiring Secret Found ===="
            Write-Output "App Name         : $($entry.ApplicationName)"
            Write-Output "App ID           : $($entry.ApplicationID)"
            Write-Output "Secret Name      : $($entry.SecretName)"
            Write-Output "Expires In       : $($entry.DaysUntilExpiry) days"
            Write-Output "Expiry Date      : $(Get-Date $entry.SecretEndDate -Format 'dd-MMM-yyyy')"
            Write-Output "App Owner(s)     : $($entry.OwnerEmails)"
        }
    }
}
 
Write-Output "`n✅ Summary: Found $($reportData.Count) secrets expiring within $DaysUntilExpiration days." -ForegroundColor Green
